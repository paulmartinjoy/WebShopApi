// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebShop.Data;

#nullable disable

namespace WebShop.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230630212455_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WebShop.Models.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CareInformation")
                        .HasColumnType("longtext");

                    b.Property<short>("CollectionType")
                        .HasColumnType("smallint");

                    b.Property<string>("FitInformation")
                        .HasColumnType("longtext");

                    b.Property<string>("MaterialInformation")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Season")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("WebShop.Models.ColorInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<string>("ColorCode")
                        .HasColumnType("longtext");

                    b.Property<string>("ColorName")
                        .HasColumnType("longtext");

                    b.Property<string>("Pictures")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.ToTable("ColorInfos");
                });

            modelBuilder.Entity("WebShop.Models.VariantInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AvailableStock")
                        .HasColumnType("int");

                    b.Property<int>("ColorInfoId")
                        .HasColumnType("int");

                    b.Property<string>("EAN")
                        .HasColumnType("longtext");

                    b.Property<double?>("Price")
                        .HasColumnType("double");

                    b.Property<string>("SizeOrLengthInfo")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ColorInfoId");

                    b.ToTable("VariantInfos");
                });

            modelBuilder.Entity("WebShop.Models.ColorInfo", b =>
                {
                    b.HasOne("WebShop.Models.Article", "Article")
                        .WithMany("ColorInfos")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");
                });

            modelBuilder.Entity("WebShop.Models.VariantInfo", b =>
                {
                    b.HasOne("WebShop.Models.ColorInfo", "ColorInfo")
                        .WithMany("VariantInfos")
                        .HasForeignKey("ColorInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ColorInfo");
                });

            modelBuilder.Entity("WebShop.Models.Article", b =>
                {
                    b.Navigation("ColorInfos");
                });

            modelBuilder.Entity("WebShop.Models.ColorInfo", b =>
                {
                    b.Navigation("VariantInfos");
                });
#pragma warning restore 612, 618
        }
    }
}
